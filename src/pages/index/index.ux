<template>
  <div class="container">
    <!-- 顶部区域 -->
          <!-- 感谢wuhaiqi提供的弧形时间-->
    <div class="header" style="width: 212px;position: absolute;left: 0;top: 0;height: 77px;" @click="terminate()">
      <text class="time" style="left:60.9px;top:3.8px;transform: rotate(-21deg)">{{time[0]}}</text>
      <text class="time" style="left:79px;top:-1px;transform: rotate(-9deg)">{{time[1]}}</text>
      <text class="time" style="left:93.5px;top:-5px;" >{{':'}}</text>
      <text class="time" style="left:108px;top:-1px;transform: rotate(9deg)">{{time[2]}}</text>
      <text class="time" style="left:126.1px;top:3.8px;transform: rotate(21deg)">{{time[3]}}</text>
    <text class="pagetitle">{{ title }}</text>
    </div>
    
    <!-- 游戏标题图片 -->
    <image 
      src="/common/title.png" 
      style="width:192px; margin-top:90px;"
    ></image>
    
    <!-- 游戏介绍 -->
    <text class="section-title">游戏介绍游戏介绍游戏介绍游戏介绍游戏介绍</text>
    
    <!-- 游戏按钮区域 -->
    <div class="game-container">
      <div 
        class="game-btn" 
        for="{{ gameList }}" 
        onclick="handleGameSelect($item)" 
        tid="game-btn"
      >
        <text class="btn-text">{{ $item.name }}</text>
      </div>
    </div>
    
    <!-- 关于按钮 -->
    <input 
      class="btn" 
      type="button" 
      value="关于" 
      @click="routeToAbout" 
    />
  </div>
</template>

<script>
import router from "@system.router"
import prompt from "@system.prompt"
import app from "@system.app"

export default {
  private: {
    title: "游戏名",
    hours: '00',
    minutes: '00',
    time: ['0','0','0','0'], // 新增时间数组初始化
    timer: null,
    gameList: [
      { id: 1, name: '开始游戏', uri: "pages/start" },
      { id: 2, name: '继续游戏', uri: "pages/save" }
    ]
  },

  onInit() {
    this.updateTime();
    this.timer = setInterval(() => this.updateTime(), 1000);
  },
  
  updateTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    // 更新原有时间显示
    this.hours = hours;
    this.minutes = minutes;
    
    // 新增弧形时间处理：将小时和分钟拆分为单个字符
    this.time = [
      hours[0],    // 小时十位
      hours[1],    // 小时个位
      minutes[0], // 分钟十位
      minutes[1]  // 分钟个位
    ];
  },

  onDestroy() {
    if (this.timer) clearInterval(this.timer);
  },
  
  updateTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    // 更新原有时间显示
    this.hours = hours;
    this.minutes = minutes;
    
    // 新增弧形时间处理：将小时和分钟拆分为单个字符
    this.time = [
      hours[0],    // 小时十位
      hours[1],    // 小时个位
      minutes[0], // 分钟十位
      minutes[1]  // 分钟个位
    ];
  },

  handleGameSelect(item) {
    if (item.uri) {
      router.push({ uri: item.uri });
    } else {
      prompt.showToast({ message: '页面未配置' });
    }
  },

  routeToAbout() {
    router.push({ uri: "pages/about" });
  },
  terminate() {
    app.terminate();
  }
}
</script>

<style>
.container {
  width: 100%;
  height: 100%;
  background-color: #000000;
  flex-direction: column;
  align-items: center;
  padding-bottom: 50px;
}

/* 顶部区域 */
.header {
  width: 100%;
  height: 77px;
  flex-direction: column;
  align-items: center;
}

.time {
  position: absolute;
  width: 25px;
  height: 33px;
  font-size: 25px;
font-weight: 600;
line-height: normal;
text-align: center;
display: flex;
align-items: flex-end;
letter-spacing: normal;
color: rgba(255, 255, 255, 0.6);
  transform-origin: 12.5px 16.5px;
}

.pagetitle {
  position: absolute;
  left: 0px;
  top: 35px;
  width: 212px;
  height: 42px;
  font-size: 32px;
  font-weight: 600;
  line-height: normal;
  text-align: center;
  letter-spacing: normal;
  color: rgba(255, 255, 255, 1);
}

/* 游戏介绍标题 */
.section-title {
  width: 100%;
  text-align: left;
  font-size: 28px;
  color: #ffffff;
  padding: 8px
}

/* 游戏按钮容器 */
.game-container {
  width: 100%;
  flex-direction: column;
  align-items: center; /* 使按钮居中 */
}


/* 游戏按钮样式 */
.game-btn {
  width: 192px;
  height: 91px;
  opacity: 1;
  border-radius: 36px;
  background-color: #262626;
  border: 3px solid #333333;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 8px;
}

/* 按钮文字样式 */
.btn-text {
  font-size: 36px;
  color: #ffffff;
}


/* 关于按钮 *//* 关于按钮样式更新 */
.btn {
  width: 156px; /* 与其他按钮同宽 */
  height: 91px;
  font-size: 36px;
  text-align: center;
  border: 3px solid #333333;
  border-radius: 36px;
  color: #ffffff;
}

</style>
