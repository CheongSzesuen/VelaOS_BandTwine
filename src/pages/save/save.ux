<template>
  <div class="container">
    <!-- 顶部区域 -->
          <!-- 感谢wuhaiqi提供的弧形时间-->
          <div class="header" style="width: 212px;position: absolute;left: 0;top: 0;height: 77px;" @click="terminate()">
            <text class="time" style="left:60.9px;top:3.8px;transform: rotate(-21deg)">{{time[0]}}</text>
            <text class="time" style="left:79px;top:-1px;transform: rotate(-9deg)">{{time[1]}}</text>
            <text class="time" style="left:93.5px;top:-5px;" >{{':'}}</text>
            <text class="time" style="left:108px;top:-1px;transform: rotate(9deg)">{{time[2]}}</text>
            <text class="time" style="left:126.1px;top:3.8px;transform: rotate(21deg)">{{time[3]}}</text>
          <text class="pagetitle">开始</text>
          </div>
    
    <div class="game-container">
      <div 
        class="game-btn" 
        for="{{ saveList }}" 
        onclick="handleSaveSelect($idx)" 
        tid="save-btn"
      >
        <text class="btn-text">{{ $item.name }}</text>
      </div>
    </div>
  </div>
</template>

<script>
import router from "@system.router"
import prompt from "@system.prompt"

export default {
  private: {
    title: "加载存档",
    time: [0,0,0,0],
    timer: null,
    saveList: [
      {id: 1, name: "存档 01"},
      {id: 2, name: "存档 02"},
      {id: 3, name: "存档 03"},
      {id: 4, name: "存档 04"},
      {id: 5, name: "存档 05"}
    ]
  },

  onInit() {
    this.updateTime();
    this.timer = setInterval(() => this.updateTime(), 1000);
  },
  
  onDestroy() {
    if (this.timer) clearInterval(this.timer);
  },
  
  updateTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    // 更新原有时间显示
    this.hours = hours;
    this.minutes = minutes;
    
    // 新增弧形时间处理：将小时和分钟拆分为单个字符
    this.time = [
      hours[0],    // 小时十位
      hours[1],    // 小时个位
      minutes[0], // 分钟十位
      minutes[1]  // 分钟个位
    ];
  },
  
  terminate() {
    router.push({
      uri: "pages/index",
      params: {
        ___PARAM_LAUNCH_FLAG___: "clearTask"
      }
    })
  },
  
  handleSaveSelect(index) {
    router.push({
        uri: "pages/game",
        params: {
            loadSlot: index
        }
    });
  }
}
</script>

<style>
.container {
  width: 100%;
  height: 100%;
  background-color: #000000;
  flex-direction: column;
  align-items: center;
  padding-bottom: 60px;
}

/* 顶部区域 */
.header {
  width: 100%;
  height: 77px;
  flex-direction: column;
  align-items: center;
}

.time {
  position: absolute;
  width: 25px;
  height: 33px;
  font-size: 25px;
 font-weight: 600;
 line-height: normal;
 text-align: center;
 display: flex;
 align-items: flex-end;
 letter-spacing: normal;
  color: rgba(255, 255, 255, 0.6);
  transform-origin: 12.5px 16.5px;
}

.pagetitle {
  position: absolute;
  left: 0px;
  top: 35px;
  width: 212px;
  height: 42px;
  font-size: 32px;
  font-weight: 600;
  line-height: normal;
  text-align: center;
  letter-spacing: normal;
  color: rgba(255, 255, 255, 1);
}

/* 存档按钮容器 */
.game-container {
  width: 100%;
  flex-direction: column;
  align-items: center;
  margin-top: 90px;
}

/* 存档按钮样式 */
.game-btn {
  width: 192px;
  height: 91px;
  opacity: 1;
  border-radius: 36px;
  background-color: #262626;
  border: 3px solid #333333;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 16px;
}

/* 按钮文字样式 */
.btn-text {
  font-size: 36px;
  color: #ffffff;
}

</style>
